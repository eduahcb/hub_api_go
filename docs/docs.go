// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Traz o informações essências do usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Informações do usuário",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.ProfileResponse"
                        }
                    }
                }
            }
        },
        "/signin": {
            "post": {
                "description": "Login de usuário no qual retorna o token caso de sucesso",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sigin de usuário",
                "parameters": [
                    {
                        "description": "Requisição para login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.SigninRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/signout": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sigin out de usuário no qual",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sigin out de usuário",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Usuário se cadastra",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sigin up de usuário",
                "parameters": [
                    {
                        "description": "Requisição para se cadastrar",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/techs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "lista todas as tecnologias do usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Techs"
                ],
                "summary": "Lista todas as tecnologias",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/techs.TechResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "atualiza tecnlogia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Techs"
                ],
                "summary": "Atualiza tecnlogia",
                "parameters": [
                    {
                        "description": "Requisição para se cadastrar",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/techs.TechRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/techs.TechResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria uma nova tecnologia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Techs"
                ],
                "summary": "Cria uma tecnologia",
                "parameters": [
                    {
                        "description": "Requisição para se cadastrar",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/techs.TechRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/techs.TechResponse"
                        }
                    }
                }
            }
        },
        "/techs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "lista uma única tecnologia por id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Techs"
                ],
                "summary": "Lista tecnologia por id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tech id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/techs.TechResponse"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "exclui uma nova tecnologia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Techs"
                ],
                "summary": "Deleta uma tecnologia",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tech id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/techs.TechResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "techs.LevelResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "techs.TechRequest": {
            "type": "object",
            "required": [
                "level_id",
                "name"
            ],
            "properties": {
                "level_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "techs.TechResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "level": {
                    "$ref": "#/definitions/techs.LevelResponse"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "users.ModuleResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "users.ProfileResponse": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "module": {
                    "$ref": "#/definitions/users.ModuleResponse"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "users.SigninRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "users.SignupRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "module_id",
                "name",
                "password"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "confirm_password": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "module_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Hub API Example",
	Description:      "Primeira api em go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
